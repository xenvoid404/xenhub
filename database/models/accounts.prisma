model Account {
id String   @id @default(cuid())
userId String   @map("user_id")
type String
provider String
providerAccountId String   @map("provider_account_id")
refreshToken String?  @map("refresh_token") @db.Text
accessToken String?  @map("access_token") @db.Text
expiresAt Int?     @map("expires_at")
tokenType String?  @map("token_type")
scope String?
idToken String?  @map("id_token") @db.Text
sessionState String?  @map("session_state")
refreshTokenExpiresIn Int?     @map("refresh_token_expires_in")
user User     @relation(fields: [userId], references: [id], onDelete: Cascade)
createdAt DateTime @default(now()) @map("created_at")
updatedAt DateTime @updatedAt @map("updated_at")

@@unique([provider, providerAccountId])
@@index([userId])
@@map("accounts")
}